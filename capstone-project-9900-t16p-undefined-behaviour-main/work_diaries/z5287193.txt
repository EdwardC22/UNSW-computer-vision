Week 1

Formed a group of 4 (hopefully finding a 5th member). Created a Jira account
and made a team in Microsoft Teams. Chose project 5 (Wait Management System).
Created a scaffold of the proposal document and created 21 user stories to
get our team started. Decided to go with the recommended three sprint structure
of the project. 

Next week: Continue working on the proposal. Finalise user stories. Decide
upon technical details of the project.

Week 2
Narrowed down the unique functionality our system will provide. Finalised
our user stories. I wrote a critique of 3 existing solutions. I suggested
a system architecture for the back end involving a PostgreSQL database,
Python and Flask as our web framework.

Next Week: Finish our proposal and start our first sprint.

Week 3
Read through our proposal and took note of inconsistencies with our interface
diagrams. Also wrote our project objectives section, and contributed to our 
user stories and epics sections. I started working on the first sprint,
creating a PostgreSQL database and basic flask app. I created the backend
functionality to add categories and items to the database through a web
interface, and also update and delete items. I also helped finalise our
proposal by proof reading and editing flow and interface diagrams.

Next Week: Continue the first sprint implementing restaurant creation,
and category update and deletion.

Week 4
Used Swagger to create API documentation to interface between backend and
frontend. Created backend functionality to update and delete categories. Worked
on fixing issues with ordering of categories and ordering of items within
categories. Added images for items to the database.

Next Week: Complete the first sprint (authentication remains) and demo
our app.

Week 5
Finalised authentication and user registration, ensuring that all privileged 
endpoints require access tokens. Updated our API documentation to be in line
with authentication changes. Prepared for the demo and retrospective. Created
an endpoint to handle obtaining and updating table numbers for restaurants.
Created an endpoint for adding and retrieving customer orders. Created 
an endpoint for submitting assistance requests, getting all assistance
requests and marking requests as handled. Created an endpoint for obtaining 
all order items ready to be delivered and marking them delivered.

Next Week: Ensure other endpoints are finished so that frontend development
can begin.

Week 6
Created some documentation to help with frontend development. Edited the
endpoint used to display orders all orders which are required to be
made by the kitchen staff. Helped to finalise the retrospective.

Next Week: Ensure the backend and frontend integration happens smoothly.

Week 7
Backend was completed prior to the end of the sprint so not much to do this
week. Did some debugging as the frontend was being developed.

Next Week: Present our project at the demonstration.

Week 8
Presented sprint 2 in the second demo. Worked on the second restrospective.

Next Week: Start the final sprint and submit the retrospective.

Week 9
Implemented analytics endpoints giving the hourly customer frequency for a
particular day, daily for a week, or monthly for a year.
Implemented endpoints giving the min, max, mean and median of order cost on
a particular day, over a particular week, or over a particular month. Documented 
and tested these endpoints. Wrote a script to generate mock data for the database.
Implemented storing JWT in cookies rather than browser storage. Implemented
a logout function.

Next Week: Prepare for the final demo and start working on the final report.

Week 10
Prepared for the final demonstration. Wrote the functionality section of the
project report, along with the backend sections for implementation challenges
and third-party functionalities. Ensured backend could be setup on VM, 
created a setup script.